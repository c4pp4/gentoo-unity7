From 8bd8c3e249c113b2f85687087cec8212a411f7dc Mon Sep 17 00:00:00 2001
From: c4pp4
Date: Wed, 13 Jul 2022 00:45:47 +0200
Subject: [PATCH 1/1] Remove Nautilus support as it's not drawing background

Signed-off-by: c4pp4
---
 plugins/background/gsd-background-manager.c | 162 +-------------------
 1 file changed, 2 insertions(+), 160 deletions(-)

diff --git a/plugins/background/gsd-background-manager.c b/plugins/background/gsd-background-manager.c
index 2b80769..081c830 100644
--- a/plugins/background/gsd-background-manager.c
+++ b/plugins/background/gsd-background-manager.c
@@ -54,9 +54,6 @@ struct GsdBackgroundManagerPrivate
         GsdBG     *bg;
 
         GsdBGCrossfade *fade;
-
-        GDBusProxy  *proxy;
-        guint        proxy_signal_id;
 };
 
 static void     gsd_background_manager_class_init  (GsdBackgroundManagerClass *klass);
@@ -77,103 +74,6 @@ dont_draw_background (GsdBackgroundManager *manager)
                                         "draw-background");
 }
 
-static gboolean
-nautilus_is_drawing_background (GsdBackgroundManager *manager)
-{
-       Atom           window_id_atom;
-       Window         nautilus_xid;
-       Atom           actual_type;
-       int            actual_format;
-       unsigned long  nitems;
-       unsigned long  bytes_after;
-       unsigned char *data;
-       Atom           wmclass_atom;
-       gboolean       running;
-       gint           error;
-       gboolean       show_desktop_icons;
-
-       show_desktop_icons = g_settings_get_boolean (manager->priv->settings,
-                                                     "show-desktop-icons");
-       if (! show_desktop_icons) {
-               return FALSE;
-       }
-
-       window_id_atom = XInternAtom (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()),
-                                     "NAUTILUS_DESKTOP_WINDOW_ID", True);
-
-       if (window_id_atom == None) {
-               return FALSE;
-       }
-
-       XGetWindowProperty (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()),
-                           GDK_ROOT_WINDOW (),
-                           window_id_atom,
-                           0,
-                           1,
-                           False,
-                           XA_WINDOW,
-                           &actual_type,
-                           &actual_format,
-                           &nitems,
-                           &bytes_after,
-                           &data);
-
-       if (data != NULL) {
-               nautilus_xid = *(Window *) data;
-               XFree (data);
-       } else {
-               return FALSE;
-       }
-
-       if (actual_type != XA_WINDOW) {
-               return FALSE;
-       }
-       if (actual_format != 32) {
-               return FALSE;
-       }
-
-       wmclass_atom = XInternAtom (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), "WM_CLASS", False);
-
-       gdk_error_trap_push ();
-
-       XGetWindowProperty (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()),
-                           nautilus_xid,
-                           wmclass_atom,
-                           0,
-                           24,
-                           False,
-                           XA_STRING,
-                           &actual_type,
-                           &actual_format,
-                           &nitems,
-                           &bytes_after,
-                           &data);
-
-       error = gdk_error_trap_pop ();
-
-       if (error == BadWindow) {
-               return FALSE;
-       }
-
-       if (actual_type == XA_STRING &&
-           nitems == 24 &&
-           bytes_after == 0 &&
-           actual_format == 8 &&
-           data != NULL &&
-           !strcmp ((char *)data, "desktop_window") &&
-           !strcmp ((char *)data + strlen ((char *)data) + 1, "Nautilus")) {
-               running = TRUE;
-       } else {
-               running = FALSE;
-       }
-
-       if (data != NULL) {
-               XFree (data);
-       }
-
-       return running;
-}
-
 static void
 on_crossfade_finished (GsdBackgroundManager *manager)
 {
@@ -190,8 +90,7 @@ draw_background (GsdBackgroundManager *manager,
         int         i;
 
 
-        if (nautilus_is_drawing_background (manager) ||
-            dont_draw_background (manager)) {
+        if (dont_draw_background (manager)) {
                 return;
         }
 
@@ -306,44 +205,6 @@ setup_bg_and_draw_background (GsdBackgroundManager *manager)
         draw_background (manager, FALSE);
 }
 
-static void
-disconnect_session_manager_listener (GsdBackgroundManager *manager)
-{
-        if (manager->priv->proxy && manager->priv->proxy_signal_id) {
-                g_signal_handler_disconnect (manager->priv->proxy,
-                                             manager->priv->proxy_signal_id);
-                manager->priv->proxy_signal_id = 0;
-        }
-}
-
-static void
-on_session_manager_signal (GDBusProxy   *proxy,
-                           const gchar  *sender_name,
-                           const gchar  *signal_name,
-                           GVariant     *parameters,
-                           gpointer      user_data)
-{
-        GsdBackgroundManager *manager = GSD_BACKGROUND_MANAGER (user_data);
-
-        if (g_strcmp0 (signal_name, "SessionRunning") == 0) {
-                setup_bg_and_draw_background (manager);
-                disconnect_session_manager_listener (manager);
-        }
-}
-
-static void
-draw_background_after_session_loads (GsdBackgroundManager *manager)
-{
-        manager->priv->proxy =
-                G_DBUS_PROXY (gnome_settings_bus_get_session_proxy ());
-
-        manager->priv->proxy_signal_id = g_signal_connect (manager->priv->proxy,
-                                                           "g-signal",
-                                                           G_CALLBACK (on_session_manager_signal),
-                                                           manager);
-}
-
-
 static void
 disconnect_screen_signals (GsdBackgroundManager *manager)
 {
@@ -506,21 +367,7 @@ gsd_background_manager_start (GsdBackgroundManager *manager,
         g_signal_connect (manager->priv->settings, "changed::picture-uri",
                           G_CALLBACK (picture_uri_changed), manager);
 
-        /* If this is set, nautilus will draw the background and is
-	 * almost definitely in our session.  however, it may not be
-	 * running yet (so is_nautilus_running() will fail).  so, on
-	 * startup, just don't do anything if this key is set so we
-	 * don't waste time setting the background only to have
-	 * nautilus overwrite it.
-	 */
-        show_desktop_icons = g_settings_get_boolean (manager->priv->settings,
-                                                     "show-desktop-icons");
-
-        if (!show_desktop_icons) {
-                setup_bg (manager);
-        } else {
-                draw_background_after_session_loads (manager);
-        }
+        setup_bg (manager);
 
         gnome_settings_profile_end (NULL);
 
@@ -536,11 +383,6 @@ gsd_background_manager_stop (GsdBackgroundManager *manager)
 
         disconnect_screen_signals (manager);
 
-        if (manager->priv->proxy) {
-                disconnect_session_manager_listener (manager);
-                g_clear_object (&manager->priv->proxy);
-        }
-
         g_signal_handlers_disconnect_by_func (manager->priv->settings,
                                               settings_change_event_cb,
                                               manager);
-- 
2.35.1

