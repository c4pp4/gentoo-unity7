From: Marco Trevisan <marco.trevisan@canonical.com>
Date: Sat, 20 Jan 2018 18:48:39 -0500
Subject: draw proper background under the scrollbar

Forwarded: yes, https://bugzilla.gnome.org/show_bug.cgi?id=754796
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/gnome-terminal/+bug/1493964
---
 src/terminal-screen-container.c | 28 +++++++++++++++--
 src/terminal-screen.c           | 56 ++++++++++++++++++++++++++++++++-
 src/terminal-screen.h           |  2 ++
 3 files changed, 83 insertions(+), 3 deletions(-)

diff --git a/src/terminal-screen-container.c b/src/terminal-screen-container.c
index 459157b..d806bab 100644
--- a/src/terminal-screen-container.c
+++ b/src/terminal-screen-container.c
@@ -121,9 +121,25 @@ terminal_screen_container_init (TerminalScreenContainer *container)
   priv->vscrollbar_policy = GTK_POLICY_AUTOMATIC;
 }
 
+static gboolean
+scrollbar_bg_draw_cb (GtkWidget *widget, cairo_t *cr, TerminalScreenContainer *container)
+{
+  TerminalScreenContainerPrivate *priv = container->priv;
+  GdkRGBA * bg = terminal_screen_get_bg_color (priv->screen);
+
+  cairo_save (cr);
+  cairo_set_source_rgba (cr, bg->red, bg->green, bg->blue, bg->alpha);
+  cairo_set_operator (cr, CAIRO_OPERATOR_SOURCE);
+  cairo_paint (cr);
+  cairo_restore (cr);
+
+  return FALSE;
+}
+
 static void
 terminal_screen_container_constructed (GObject *object)
 {
+  GtkWidget *scrollbar;
   TerminalScreenContainer *container = TERMINAL_SCREEN_CONTAINER (object);
   TerminalScreenContainerPrivate *priv = container->priv;
 
@@ -151,9 +167,12 @@ terminal_screen_container_constructed (GObject *object)
 }
 #else
   priv->hbox = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
+  priv->vscrollbar = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
 
-  priv->vscrollbar = gtk_scrollbar_new (GTK_ORIENTATION_VERTICAL,
-                                        gtk_scrollable_get_vadjustment (GTK_SCROLLABLE (priv->screen)));
+  scrollbar = gtk_scrollbar_new (GTK_ORIENTATION_VERTICAL,
+                                 gtk_scrollable_get_vadjustment (GTK_SCROLLABLE (priv->screen)));
+
+  gtk_box_pack_start (GTK_BOX (priv->vscrollbar), scrollbar, TRUE, TRUE, 0);
 
   gtk_box_pack_start (GTK_BOX (priv->hbox), GTK_WIDGET (priv->screen), TRUE, TRUE, 0);
   gtk_box_pack_start (GTK_BOX (priv->hbox), priv->vscrollbar, FALSE, FALSE, 0);
@@ -163,6 +182,11 @@ terminal_screen_container_constructed (GObject *object)
 #endif
 
   _terminal_screen_update_scrollbar (priv->screen);
+
+  g_signal_connect (G_OBJECT (priv->vscrollbar), "draw",
+                    G_CALLBACK (scrollbar_bg_draw_cb), container);
+  g_signal_connect_swapped (priv->screen, "notify::bg-color",
+                            G_CALLBACK (gtk_widget_queue_draw), priv->vscrollbar);
 }
 
 static void
diff --git a/src/terminal-screen.c b/src/terminal-screen.c
index b7459c0..10a4c69 100644
--- a/src/terminal-screen.c
+++ b/src/terminal-screen.c
@@ -123,6 +123,8 @@ struct _TerminalScreenPrivate
   char *override_title;
   guint contents_changed_source_id;
   guint shell_preexec_source_id;
+  GdkRGBA bg_color;
+  GdkRGBA fg_color;
 };
 
 enum
@@ -137,7 +139,9 @@ enum
 enum {
   PROP_0,
   PROP_PROFILE,
-  PROP_TITLE
+  PROP_TITLE,
+  PROP_BG_COLOR,
+  PROP_FG_COLOR
 };
 
 enum
@@ -617,6 +621,12 @@ terminal_screen_get_property (GObject *object,
       case PROP_TITLE:
         g_value_set_string (value, terminal_screen_get_title (screen));
         break;
+      case PROP_BG_COLOR:
+        g_value_set_boxed (value, terminal_screen_get_bg_color (screen));
+        break;
+      case PROP_FG_COLOR:
+        g_value_set_boxed (value, terminal_screen_get_bg_color (screen));
+        break;
       default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
         break;
@@ -637,6 +647,8 @@ terminal_screen_set_property (GObject *object,
         terminal_screen_set_profile (screen, g_value_get_object (value));
         break;
       case PROP_TITLE:
+      case PROP_FG_COLOR:
+      case PROP_BG_COLOR:
         /* not writable */
       default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
@@ -726,6 +738,20 @@ terminal_screen_class_init (TerminalScreenClass *klass)
                           NULL,
                           G_PARAM_READABLE | G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB));
 
+  g_object_class_install_property
+    (object_class,
+     PROP_BG_COLOR,
+     g_param_spec_boxed ("bg-color", NULL, NULL,
+                         GDK_TYPE_RGBA,
+                         G_PARAM_READABLE | G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB));
+
+  g_object_class_install_property
+    (object_class,
+     PROP_FG_COLOR,
+     g_param_spec_boxed ("fg-color", NULL, NULL,
+                         GDK_TYPE_RGBA,
+                         G_PARAM_READABLE | G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB));
+
   g_type_class_add_private (object_class, sizeof (TerminalScreenPrivate));
 
   n_url_regexes = G_N_ELEMENTS (url_regex_patterns);
@@ -1192,6 +1218,22 @@ terminal_screen_cook_title (TerminalScreen *screen)
     g_object_notify (G_OBJECT (screen), "title");
 }
 
+GdkRGBA*
+terminal_screen_get_bg_color (TerminalScreen *screen)
+{
+  g_return_val_if_fail (TERMINAL_IS_SCREEN (screen), NULL);
+
+  return &screen->priv->bg_color;
+}
+
+GdkRGBA*
+terminal_screen_get_fg_color (TerminalScreen *screen)
+{
+  g_return_val_if_fail (TERMINAL_IS_SCREEN (screen), NULL);
+
+  return &screen->priv->fg_color;
+}
+
 static void
 terminal_screen_profile_changed_cb (GSettings     *profile,
                                     const char    *prop_name,
@@ -1442,6 +1484,18 @@ update_color_scheme (TerminalScreen *screen)
   vte_terminal_set_color_highlight (VTE_TERMINAL (screen), highlight_bgp);
   vte_terminal_set_color_highlight_foreground (VTE_TERMINAL (screen), highlight_fgp);
 
+  if (gdk_rgba_hash (&priv->bg_color) != gdk_rgba_hash (&bg))
+    {
+      priv->bg_color = bg;
+      g_object_notify (G_OBJECT (screen), "bg-color");
+    }
+
+  if (gdk_rgba_hash (&priv->fg_color) != gdk_rgba_hash (&fg))
+    {
+      priv->fg_color = fg;
+      g_object_notify (G_OBJECT (screen), "fg-color");
+    }
+
   update_toplevel_transparency (screen);
 }
 
diff --git a/src/terminal-screen.h b/src/terminal-screen.h
index 5b7fcc5..ea9c6c2 100644
--- a/src/terminal-screen.h
+++ b/src/terminal-screen.h
@@ -115,6 +115,8 @@ GSettings* terminal_screen_ref_profile (TerminalScreen *screen);
 
 const char* terminal_screen_get_raw_title      (TerminalScreen *screen);
 const char* terminal_screen_get_title          (TerminalScreen *screen);
+GdkRGBA*    terminal_screen_get_bg_color       (TerminalScreen *screen);
+GdkRGBA*    terminal_screen_get_fg_color       (TerminalScreen *screen);
 
 void terminal_screen_set_user_title (TerminalScreen *screen,
                                      const char *text);
-- 
2.26.2
